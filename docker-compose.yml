# services:
#   db:
#     image: postgres:16
#     container_name: postgres_database
#     environment:
#       POSTGRES_USER: ${DB_USER}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#       POSTGRES_DB: ${DB_NAME}
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
#       interval: 5s
#       retries: 5
#       start_period: 10s

#   backend:
#     build: .
#     container_name: backend
#     restart: always
#     ports:
#       - "8000:8000"
#     depends_on:
#       db:
#         condition: service_healthy
#     environment:
#       DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
#       DJANGO_SECRET_KEY: ${SECRET_KEY}
#       DEBUG: "True"
#     volumes:
#       - .:/app/backend

#   frontend:
#     build:
#       context: ./frontend/job_board/
#       dockerfile: Dockerfile
#     ports:
#       - "5173:5173"
#     volumes:
#       - ./frontend/job_board:/app/frontend/
#       - /app/frontend/node_modules
#     depends_on:
#       - backend

# volumes:
#   postgres_data:




services:

  db:
    image: postgres:16
    container_name: postgres_database
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"  
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 10s
      retries: 5  

  backend:
    build: .
    container_name: backend
    restart: always  
    ports:
      - "8000:8000"
    depends_on:
      - db  
    environment:
         DATABASE_URL: postgres://${DB_USER}:${DB_PASSWORD}@db:5432/${DB_NAME}
         DJANGO_SECRET_KEY: ${SECRET_KEY}
         DEBUG: "True"  
         DB_NAME: ${DB_NAME}
         DB_USER: ${DB_USER}
         DB_PASSWORD: ${DB_PASSWORD}
         DB_HOST: ${DB_HOST}
         DB_PORT: ${DB_PORT}
    volumes:
      - .:/app/backend
    
  frontend:
    build:
      context: ./frontend/job_board/
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend/job_board:/app/frontend/
      - /app/frontend/node_modules
    depends_on:
      - backend

volumes:
  postgres_data: