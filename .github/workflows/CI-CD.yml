name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  ci-checks:
    name: Code Integration Checks
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2  

      - name: Start Docker Containers
        run: |
          docker compose up --build -d
          sleep 10

      - name: Check Logs for Issues
        run: |
          docker compose logs --tail=50

      - name: Stop Containers After Check
        run: docker compose down

  deploy:
    runs-on: self-hosted
    needs: ci-checks

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up environment variables
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: |
          echo "DB_USER=$DB_USER" >> .env
          echo "DB_PASSWORD=$DB_PASSWORD" >> .env
          echo "DB_NAME=$DB_NAME" >> .env
          echo "SECRET_KEY=$SECRET_KEY" >> .env

      - name: Run Docker Compose
        env:
          DB_USER: ${{ secrets.DB_USER }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
        run: sudo docker compose up -d

